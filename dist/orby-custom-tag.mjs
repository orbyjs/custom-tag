import{render as t,h as e}from"@orby/core";let s={},o={};export default function({tag:p,props:r,children:i}){o[p]={Component:i[0],scoped:r.scoped,props:r.props||[]},s[p]||(s[p]=class extends HTMLElement{constructor(){super(),this.props={},o[p].scoped&&this.attachShadow({mode:"open"})}static get observedAttributes(){return o[p]?o[p].props:[]}connectedCallback(){this.mounted=!0,this.mapAllProps(),this.update()}disconnectedCallback(){this.update(!0)}attributeChangedCallback(t,e,s){e!==s&&(this.props[t]=s,this.update())}mapAllProps(){let t=o[p].props;for(let e=0;e<t.length;e++){let s=t[e];this.props[s]=this.getAttribute(s)}}update(s){this.mounted&&(this.prevent||(this.prevent=!0,setTimeout(()=>{this.lastView=t(e(s?"":o[p].Component,r),o[p].scoped&&this.shadowRoot||this,this.lastView),this.prevent=!1})))}},customElements.define(p,s[p])),document.querySelectorAll(p).forEach(t=>t.update())}
//# sourceMappingURL=orby-custom-tag.mjs.map
